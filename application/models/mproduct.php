<?phpclass mproduct extends CI_Model{    protected $_table='products';    public function __construct(){        parent::__construct();    }    public function addLove($data){        $this->db->insert('love',$data);        return $this->db->insert_id();    }    public function checkLove($pid,$uid){        $this->db->where("user_id",$uid);        $this->db->where("product_id",$pid);        if($this->db->get('love')->num_rows()>0){            return true;        }else{            return false;        }    }    public function delLove($id){        $this->db->where('id',$id);        $this->db->delete('love');    }    public function getLove($id){        $this->db->select('*');        $this->db->where('user_id',$id);        return $this->db->get('love')->result_array();    }    public function listXuatxu(){        $this->db->select('xuatxu');        $this->db->group_by('xuatxu');        return $this->db->get($this->_table)->result_array();    }    public function listPhanloai(){        $this->db->select('phanloai');        $this->db->group_by('phanloai');        return $this->db->get($this->_table)->result_array();    }    public function listAll($limit,$start,$s='',$cate='null'){        $this->db->select('products.* , category.name as catename');        $this->db->join('category','category.id = products.category_id');        $this->db->like('products.name',$s);        if($cate!='null'){            $this->db->where('products.category_id',$cate);        }        $this->db->limit($limit,$start);        $this->db->order_by('products.id','desc');        return $this->db->get($this->_table)->result_array();    }    public function listAll2($limit,$start,$s='',$cate='null',$hotdeal='null'){        $this->db->select('products.* , category.name as catename, suppliers.name as supplier');        $this->db->join('category','category.id = products.category_id');        $this->db->join('suppliers','suppliers.id = products.supplier_id');        $this->db->like('products.name',$s);        if($cate!='null'){            $this->db->where('products.category_id',$cate);        }        if($hotdeal=='hotdeal'){            $this->db->where('hotdeal','on');        }        else if($hotdeal=='banchay'){            $this->db->where('selling','on');        }        $this->db->limit($limit,$start);        $this->db->order_by('products.id','desc');        return $this->db->get($this->_table)->result_array();    }    public function getAll(){        $this->db->select('products.* , category.name as catename');        $this->db->join('category','category.id = products.category_id');        return $this->db->get($this->_table)->result_array();    }    // Lấy ra sản phẩm mói    public function getNew(){        $this->db->select('products.* , category.link as catename');        $this->db->join('category','category.id = products.category_id');        $this->db->limit(10,0);        $this->db->order_by('products.id','desc');        return $this->db->get($this->_table)->result_array();    }    //--------------    // Lấy ra sản phẩm khuyến mãi    public function getSale(){        $this->db->select('products.* , category.link as catename');        $this->db->join('category','category.id = products.category_id');        $this->db->limit(10,0);        $this->db->where('price_reduce > 0');        $this->db->order_by('products.id','random');        return $this->db->get($this->_table)->result_array();    }    // Lấy ra sản phẩm rate    public function getRating(){        $this->db->select('products.* , category.name as catename');        $this->db->join('category','category.id = products.category_id');        $this->db->limit(16,0);        $this->db->order_by('products.rate','desc');        return $this->db->get($this->_table)->result_array();    }    // Lấy ra sản phẩm rate    public function getSelling(){        $this->db->select('products.* , category.link as catename');        $this->db->join('category','category.id = products.category_id');        $this->db->limit(5,0);        $this->db->where('hotdeal','on');        $this->db->order_by('products.id','random');        return $this->db->get($this->_table)->result_array();    }    // Lấy ra sản phẩm rate    public function getBanchay(){        $this->db->select('products.* , category.link as catename');        $this->db->join('category','category.id = products.category_id');        $this->db->limit(6,0);        $this->db->where('selling','on');        $this->db->order_by('products.id','random');        return $this->db->get($this->_table)->result_array();    }        public function getRandom(){        $this->db->select('products.* , category.link as catename');        $this->db->join('category','category.id = products.category_id');        $this->db->limit(24,0);        $this->db->order_by('products.id','random');        return $this->db->get($this->_table)->result_array();    }        // Lấy ra sản phẩm where    public function getWhere($val){        $this->db->select('products.* , category.link as catename');        $this->db->join('category','category.id = products.category_id');        $this->db->where($val);        $this->db->order_by('products.id','desc');        return $this->db->get($this->_table)->result_array();    }    // Lấy ra sản phẩm wherein    public function getWhereIn($data){        $this->db->select('products.* , category.link as catename');        $this->db->join('category','category.id = products.category_id');        $this->db->join('suppliers','suppliers.id = products.supplier_id');        $this->db->limit(8,0);        $this->db->where_in('products.id',$data);        $this->db->order_by('products.id','desc');        return $this->db->get($this->_table)->result_array();    }    // Lấy ra sản phẩm Cùng mức giá    public function getPrice($price,$cate2){        $this->db->select('products.* , category.name as catename, suppliers.name as supplier');        $this->db->join('category','category.id = products.category_id');        $this->db->join('suppliers','suppliers.id = products.supplier_id');        $this->db->limit(10,0);        if($price<=1000000){            $this->db->where("price BETWEEN 0 AND 1000000");        }elseif($price>1000000 && $price<=3000000){            $this->db->where("price BETWEEN 1000000 AND 3000000");        }elseif($price>3000000 && $price<=5000000){            $this->db->where("price BETWEEN 3000000 AND 5000000");        }elseif($price>5000000){            $this->db->where("price > 5000000");        }		$this->db->where('category_id',$cate2);        $this->db->order_by('products.id','desc');        return $this->db->get($this->_table)->result_array();    }    //Lấy ra sản phẩm cùng chuyên mục    public function getCategory($cate,$limit,$start,$price=0){        $this->db->select('products.* , category.link as catename');        $this->db->join('category','category.id = products.category_id');        $this->db->join('suppliers','suppliers.id = products.supplier_id');        $this->db->where_in('category_id',$cate);        if($price==1){            $this->db->where("real BETWEEN 0 AND 1000000");        }        if($price==2){            $this->db->where("real BETWEEN 1000000 AND 2000000");        }        if($price==3){            $this->db->where("real BETWEEN 2000000 AND 3000000");        }        if($price==4){            $this->db->where("real BETWEEN 3000000 AND 5000000");        }        if($price==5){            $this->db->where("real > 5000000");        }        if($limit!=0)            $this->db->limit($limit,$start);        $this->db->order_by('updated','desc');        return $this->db->get($this->_table)->result_array();    }    public function getnumCategory($cate,$price=0){        $this->db->select('products.* , category.link as catename');        $this->db->join('category','category.id = products.category_id');        $this->db->join('suppliers','suppliers.id = products.supplier_id');        $this->db->where_in('category_id',$cate);        if($price==1){            $this->db->where("real BETWEEN 0 AND 1000000");        }        if($price==2){            $this->db->where("real BETWEEN 1000000 AND 2000000");        }        if($price==3){            $this->db->where("real BETWEEN 2000000 AND 3000000");        }        if($price==4){            $this->db->where("real BETWEEN 3000000 AND 5000000");        }        if($price==5){            $this->db->where("real > 5000000");        }                $this->db->order_by('updated','asc');        return $this->db->get($this->_table)->num_rows();    }        //Lấy ra sản phẩm cùng chuyên mục    public function getCategory2($cate,$limit,$start){        $this->db->select('products.* , category.link as catename');        $this->db->join('category','category.id = products.category_id');        $this->db->join('suppliers','suppliers.id = products.supplier_id');        $this->db->where_in('category_id',$cate);        if($limit!=0)            $this->db->limit($limit,$start);        $this->db->order_by('id', 'RANDOM');        return $this->db->get($this->_table)->result_array();    }    //Lấy ra sản phẩm cùng thương hiệu    public function getSupplier($cate,$cate2='',$limit=16){        $this->db->select('products.* , category.name as catename, suppliers.name as supplier');        $this->db->join('category','category.id = products.category_id');        $this->db->join('suppliers','suppliers.id = products.supplier_id');        $this->db->where_in('category_id',$cate);        $this->db->where('supplier_id',$cate2);        $this->db->limit($limit,0);        $this->db->order_by('updated','desc');        return $this->db->get($this->_table)->result_array();    }    public function numSupplier($cate,$cate2=''){        $this->db->select('products.* , category.name as catename, suppliers.name as supplier');        $this->db->join('category','category.id = products.category_id');        $this->db->join('suppliers','suppliers.id = products.supplier_id');        $this->db->where_in('category_id',$cate);        $this->db->where('supplier_id',$cate2);        $this->db->order_by('updated','desc');        return $this->db->get($this->_table)->num_rows();    }    public function getSupplier2($cate){        $this->db->select('products.* , category.link as catename, suppliers.name as supplier');        $this->db->join('category','category.id = products.category_id');        $this->db->join('suppliers','suppliers.id = products.supplier_id');        $this->db->where('supplier_id',$cate);        $this->db->order_by('updated','desc');        return $this->db->get($this->_table)->result_array();    }    //Lấy ra sản phẩm cùng chất liệu    public function getChatlieu($cate){        $this->db->select('products.* , category.name as catename, suppliers.name as supplier');        $this->db->join('category','category.id = products.category_id');        $this->db->join('suppliers','suppliers.id = products.supplier_id');        $this->db->limit(10,0);        $this->db->where('chatlieuday',$cate);        $this->db->order_by('products.id','desc');        return $this->db->get($this->_table)->result_array();    }        //--------------    function listByParent($arr,$limit,$start){        $this->db->where_in('category_id',$arr);        $this->db->limit($limit,$start);        $this->db->order_by('id','desc');        return $this->db->get($this->_table)->result_array();    }    function listByParentMod($arr,$sup,$limit,$start){        $this->db->where_in('category_id',$arr);        $this->db->limit($limit,$start);        $this->db->where('supplier_id',$sup);        $this->db->order_by('id','desc');        return $this->db->get($this->_table)->result_array();    }    function search($search,$limit,$start){        $this->db->like('name',$search);        $this->db->limit($limit,$start);        $this->db->order_by('updated','asc');        return $this->db->get($this->_table)->result_array();    }    public function numRowsSearch($search){        $this->db->like('name',$search);        return $this->db->get($this->_table)->num_rows();    }    public function numRowsByParent($arr,$price=0){        if($price==1){            $this->db->where("real BETWEEN 0 AND 1000000");        }        if($price==2){            $this->db->where("real BETWEEN 1000000 AND 2000000");        }        if($price==3){            $this->db->where("real BETWEEN 2000000 AND 3000000");        }        if($price==4){            $this->db->where("real BETWEEN 3000000 AND 5000000");        }        if($price==5){            $this->db->where("real > 5000000");        }        $this->db->where_in('category_id',$arr);        return $this->db->get($this->_table)->num_rows();    }    public function numRowsByParentMod($arr,$sup){        $this->db->where_in('category_id',$arr);        $this->db->where('supplier_id',$sup);        return $this->db->get($this->_table)->num_rows();    }    public function add($data){        $this->db->insert($this->_table,$data);        return $this->db->insert_id();    }    public function del($id){        $this->db->where('id',$id);        $this->db->delete($this->_table);    }    public function numRows($s='',$cate='null',$hotdeal='null'){        $this->db->select('products.* , category.name as catename, suppliers.name as supplier');        $this->db->join('category','category.id = products.category_id');        $this->db->join('suppliers','suppliers.id = products.supplier_id');        $this->db->like('products.name',$s);        if($cate!='null'){            $this->db->where('products.category_id',$cate);        }        if($hotdeal=='hotdeal'){            $this->db->where('hotdeal','on');        }        else if($hotdeal=='banchay'){            $this->db->where('selling','on');        }        return $this->db->get($this->_table)->num_rows();    }    public function getById($id){        $this->db->where("id",$id);        return $this->db->get($this->_table)->row_array();    }    public function getByLink($link){        $this->db->where("link",$link);        return $this->db->get($this->_table)->row_array();    }    public function editById($id,$data){        $this->db->where("id",$id);        $this->db->update($this->_table,$data);    }    // function kiểm tra tồn tại user    public function checkLink($link){        $this->db->where("link",$link);        if($this->db->get($this->_table)->num_rows()>0){            return false;        }else{            return true;        }    }    public function checkName($link){        $this->db->where("name",$link);        if($this->db->get($this->_table)->num_rows()>0){            return false;        }else{            return true;        }    }    public function checkMasp($link){        $this->db->where("masp",$link);        if($this->db->get($this->_table)->num_rows()>0){            return false;        }else{            return true;        }    }    function ajax($cate='null',$supplier='null',$price='null',$reduce='null',$rating='null',$start=0,$limit=3,$search='null',$hotdeal='null'){        if($cate!='null') $this->db->where_in('category_id',$cate);        if($price!='null') {            if($price==1){                $this->db->where("real BETWEEN 0 AND 1000000");            }elseif($price==2){                $this->db->where("real BETWEEN 1000000 AND 2000000");            }elseif($price==3){                $this->db->where("real BETWEEN 2000000 AND 5000000");            }elseif($price==4){                $this->db->where("real BETWEEN 5000000 AND 10000000");            }elseif($price==5){                $this->db->where("real > 10000000");            }        }        if($supplier!='null') $this->db->where('supplier_id',$supplier);        if($reduce!='null') $this->db->where('price_reduce',$reduce);        if($rating!='null') {            if($rating==1){                $this->db->where("rate >= 0.5 AND rate < 1.5");            }elseif($rating==2){                $this->db->where("rate >= 1.5 AND rate < 2.5");            }elseif($rating==3){                $this->db->where("rate >= 2.5 AND rate < 3.5");            }elseif($rating==4){                $this->db->where("rate >=3.5  AND rate < 4.5");            }elseif($rating==5){                $this->db->where("rate >= 4.5");            }        }        if($search!='null') $this->db->like('name',$search);        if($hotdeal!='null') $this->db->where('hotdeal','on');        $this->db->limit($limit,$start);        $this->db->order_by('id','desc');        return $this->db->get($this->_table)->result_array();    }    function checkAjax($cate='null',$supplier='null',$price='null',$reduce='null',$rating='null',$start=0,$limit=3,$search='null',$hotdeal='null'){        if($cate!='null') $this->db->where_in('category_id',$cate);        if($price!='null') {            if($price==1){                $this->db->where("real BETWEEN 0 AND 1000000");            }elseif($price==2){                $this->db->where("real BETWEEN 1000000 AND 2000000");            }elseif($price==3){                $this->db->where("real BETWEEN 2000000 AND 5000000");            }elseif($price==4){                $this->db->where("real BETWEEN 5000000 AND 10000000");            }elseif($price==5){                $this->db->where("real > 10000000");            }        }        if($supplier!='null') $this->db->where('supplier_id',$supplier);        if($reduce!='null') $this->db->where('price_reduce',$reduce);        if($rating!='null') {            if($rating==1){                $this->db->where("rate >= 0.5 AND rate < 1.5");            }elseif($rating==2){                $this->db->where("rate >= 1.5 AND rate < 2.5");            }elseif($rating==3){                $this->db->where("rate >= 2.5 AND rate < 3.5");            }elseif($rating==4){                $this->db->where("rate >=3.5  AND rate < 4.5");            }elseif($rating==5){                $this->db->where("rate >= 4.5");            }        }        if($search!='null') $this->db->like('name',$search);        if($hotdeal!='null') $this->db->where('hotdeal','on');        $this->db->limit($limit,$start);        $this->db->order_by('id','desc');        return $this->db->get($this->_table)->num_rows();    }    public function addRate($data){        $this->db->insert('ratings',$data);        return $this->db->insert_id();    }    public function getRate($id){        $this->db->select_avg('rate');        $this->db->where('product_id',$id);        return $this->db->get('ratings')->row_array();    }    public function check($pid,$uid){        $this->db->where("user_id",$uid);        $this->db->where("product_id",$pid);        if($this->db->get('ratings')->num_rows()>0){            return true;        }else{            return false;        }    }    public function countProduct($cate){        $this->db->select('products.* , category.name as catename, suppliers.name as supplier');        $this->db->join('category','category.id = products.category_id');        $this->db->join('suppliers','suppliers.id = products.supplier_id');        $this->db->where('products.category_id',$cate);        return $this->db->get($this->_table)->num_rows();    }            public function filter2($key, $thuonghieu, $khuyenmai, $sapxep, $limit, $start, $category,$khoanggia){        $this->db->select('products.*');        $this->db->like('products.name',$key);        if(isset($thuonghieu[0]) && $thuonghieu[0]!=''){            $this->db->where_in('products.supplier_id',$thuonghieu);        }        if($khoanggia!= '') {            $n = 0;            foreach($khoanggia as $price){                $n++;                if($n==1){                    if($price==1){                        $this->db->where("products.real BETWEEN 0 AND 50000");                    }                    if($price==2){                        $this->db->where("products.real BETWEEN 50000 AND 100000");                    }                    if($price==3){                        $this->db->where("products.real BETWEEN 100000 AND 200000");                    }                    if($price==4){                        $this->db->where("products.real > 200000");                    }                  }                  else{                    if($price==1){                        $this->db->or_where("products.real BETWEEN 0 AND 50000");                    }                    if($price==2){                        $this->db->or_where("products.real BETWEEN 50000 AND 100000");                    }                    if($price==3){                        $this->db->or_where("products.real BETWEEN 100000 AND 200000");                    }                    if($price==4){                        $this->db->or_where("products.real > 200000");                    }                    }             }        }        if($khuyenmai!= '') {            $n = 0;            foreach($khuyenmai as $price){                $n++;                if($n==1){                    if($price=='1'){                        $this->db->where("products.price_reduce BETWEEN 0 AND 10");                    }elseif($price=='2'){                        $this->db->where("products.price_reduce BETWEEN 10 AND 30");                    }elseif($price=='3'){                        $this->db->where("products.price_reduce BETWEEN 30 AND 50");                    }elseif($price=='4'){                        $this->db->where("products.price_reduce BETWEEN 50 AND 75");                    }elseif($price=='5'){                        $this->db->where("products.price_reduce > 75");                    }                   }                  else{                    if($price=='1'){                        $this->db->or_where("products.price_reduce BETWEEN 0 AND 10");                    }elseif($price=='2'){                        $this->db->or_where("products.price_reduce BETWEEN 10 AND 30");                    }elseif($price=='3'){                        $this->db->or_where("products.price_reduce BETWEEN 30 AND 50");                    }elseif($price=='4'){                        $this->db->or_where("products.price_reduce BETWEEN 50 AND 75");                    }elseif($price=='5'){                        $this->db->or_where("products.price_reduce > 75");                    }                  }            }        }        if($sapxep == '1')            $this->db->order_by('products.real','asc');        else if($sapxep == '2')            $this->db->order_by('products.real','desc');        else            $this->db->order_by('products.updated','desc');        return $this->db->get($this->_table)->result_array();            }        public function numrow_filter2($key, $thuonghieu, $khuyenmai, $sapxep, $category,$khoanggia){        $this->db->select('products.*');        $this->db->like('products.name',$key);             if(isset($thuonghieu[0]) && $thuonghieu[0]!=''){            $this->db->where_in('products.supplier_id',$thuonghieu);        }        if($khoanggia!= '') {            $n = 0;            foreach($khoanggia as $price){                $n++;                if($n==1){                    if($price==1){                        $this->db->where("products.real BETWEEN 0 AND 50000");                    }                    if($price==2){                        $this->db->where("products.real BETWEEN 50000 AND 100000");                    }                    if($price==3){                        $this->db->where("products.real BETWEEN 100000 AND 200000");                    }                    if($price==4){                        $this->db->where("products.real > 200000");                    }                  }                  else{                    if($price==1){                        $this->db->or_where("products.real BETWEEN 0 AND 50000");                    }                    if($price==2){                        $this->db->or_where("products.real BETWEEN 50000 AND 100000");                    }                    if($price==3){                        $this->db->or_where("products.real BETWEEN 100000 AND 200000");                    }                    if($price==4){                        $this->db->or_where("products.real > 200000");                    }                    }             }        }        if($khuyenmai!= '') {            $n = 0;            foreach($khuyenmai as $price){                $n++;                if($n==1){                    if($price=='1'){                        $this->db->where("products.price_reduce BETWEEN 0 AND 10");                    }elseif($price=='2'){                        $this->db->where("products.price_reduce BETWEEN 10 AND 30");                    }elseif($price=='3'){                        $this->db->where("products.price_reduce BETWEEN 30 AND 50");                    }elseif($price=='4'){                        $this->db->where("products.price_reduce BETWEEN 50 AND 75");                    }elseif($price=='5'){                        $this->db->where("products.price_reduce > 75");                    }                   }                  else{                    if($price=='1'){                        $this->db->or_where("products.price_reduce BETWEEN 0 AND 10");                    }elseif($price=='2'){                        $this->db->or_where("products.price_reduce BETWEEN 10 AND 30");                    }elseif($price=='3'){                        $this->db->or_where("products.price_reduce BETWEEN 30 AND 50");                    }elseif($price=='4'){                        $this->db->or_where("products.price_reduce BETWEEN 50 AND 75");                    }elseif($price=='5'){                        $this->db->or_where("products.price_reduce > 75");                    }                  }            }        }        if($sapxep == '1')            $this->db->order_by('products.real','asc');        else if($sapxep == '2')            $this->db->order_by('products.real','desc');        else            $this->db->order_by('products.updated','desc');        return $this->db->get($this->_table)->num_rows();    }}