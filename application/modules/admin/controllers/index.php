<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class index extends MY_Controller {	public function __construct(){		parent::__construct();        $this->_data['now'] = ' ';        $this->load->model('mconfig');        $this->load->model('mphieuthu');        $this->load->model('mphieuchi');        $this->load->model('mphieubanhang');        $user = $this->session->userdata('user');        if(!$user || $user['user_type'] != 'administrator'){            if($user && $user['user_type']!='nhanvien' && !strpos($_SERVER['REQUEST_URI'],'admin/product/phieubanhang') && !strpos($_SERVER['REQUEST_URI'],'admin/index/ajax')){                redirect(base_url()."admin/product/phieubanhang");                }            else if($user['user_type']=='administrator'){                redirect(base_url().'admin');            }               else if(!$user){                redirect(base_url().'admin/login');            }        }        $this->form_validation->CI =& $this;	}	public function index()	{         $this->load->model('muser');        $this->_data['count_news'] = $this->muser->count('khuyenmai');        $this->_data['count_services'] = $this->muser->count('news');        $this->_data['count_job'] = $this->muser->count('job');        $this->_data['count_slider'] = $this->muser->count('slider');        $this->_data['count_cart_off'] = $this->muser->countWhere('carts','status',0);        $this->_data['count_cart_on'] = $this->muser->countWhere('carts','status > ',0);        $this->_data['count_coupon'] = $this->muser->count('coupons');        $this->_data['count_contact'] = $this->muser->count('contacts');		$this->_data['template'] = 'admin/home';		$this->_data['title'] = 'Trang Quản Trị';		$this->load->view("layout/admin",$this->_data);	}    public function daily(){        $this->load->model('mconfig');        $this->_data['info'] = $this->mconfig->getByType('daily');        $this->_data['template'] = 'admin/daily';        $this->load->view("layout/admin",$this->_data);    }    public function phieuthudichvu(){        if(isset($_POST['ok'])){            $total = str_replace('VND','',$this->input->post('total'));            $total = str_replace('.','',$total);            $vat = str_replace('VND','',$this->input->post('vat'));            $vat = str_replace('.','',$vat);            $arr = array(                'mapt' => $this->input->post('mapt'),                'ngay' => $this->input->post('ngay'),                'thang' => $this->input->post('thang'),                'nam' => $this->input->post('nam'),                'date' => $this->input->post('nam')."-".$this->input->post('thang')."-".$this->input->post('ngay'),                'customer_id' => $this->input->post('customer_id'),                'detail' => $this->input->post('detail'),                'total' => $total,                'vat' => $vat,                'text_total' => $this->input->post('text_total'),            );            $this->mphieuthudv->add($arr);        }else{            $this->load->model('mcustomer');            $this->_data['all_customer'] = $this->mcustomer->getAll();            $this->load->view("/phieuthudv",$this->_data);        }    }    public function phieuthu(){        if(isset($_POST['ok'])){            $total = str_replace('VND','',$this->input->post('total'));            $total = str_replace('.','',$total);            $vat = str_replace('VND','',$this->input->post('vat'));            $vat = str_replace('.','',$vat);            $user = $this->session->userdata('user');            $arr = array(                'mapt' => $this->input->post('mapt'),                'ngay' => $this->input->post('ngay'),                'thang' => $this->input->post('thang'),                'nam' => $this->input->post('nam'),                'date' => $this->input->post('nam')."-".$this->input->post('thang')."-".$this->input->post('ngay'),                'customer_id' => $this->input->post('customer_id'),                'detail' => $this->input->post('detail'),                'total' => $total,                'vat' => $vat,                'text_total' => $this->input->post('text_total'),                'seller'=> $user['user_id']            );            $this->mphieuthu->add($arr);        }else{            $this->load->model('mcustomer');            $this->_data['all_customer'] = $this->mcustomer->getAll();            $this->load->view("/phieuthu",$this->_data);        }    }    public function phieuchi(){        if(isset($_POST['ok'])){            $total = str_replace('VND','',$this->input->post('total'));            $total = str_replace('.','',$total);            $vat = str_replace('VND','',$this->input->post('vat'));            $vat = str_replace('.','',$vat);            $user = $this->session->userdata('user');            $arr = array(                'mapt' => $this->input->post('mapt'),                'ngay' => $this->input->post('ngay'),                'thang' => $this->input->post('thang'),                'nam' => $this->input->post('nam'),                'date' => $this->input->post('nam')."-".$this->input->post('thang')."-".$this->input->post('ngay'),                'customer_id' => $this->input->post('customer_id'),                'detail' => $this->input->post('detail'),                'total' => $total,                'vat' => $vat,                'text_total' => $this->input->post('text_total'),                'seller'=> $user['user_id']            );            $this->mphieuchi->add($arr);        }else{            $this->load->model('mcustomer');            $this->_data['all_customer'] = $this->mcustomer->getAll();            $this->load->view("/phieuchi",$this->_data);        }    }    public function phieubanhang(){        if(isset($_POST['ok'])){            $total = str_replace('VND','',$this->input->post('total'));            $total = str_replace('.','',$total);            $vat = str_replace('VND','',$this->input->post('vat'));            $vat = str_replace('.','',$vat);            $user = $this->session->userdata('user');            $arr = array(                'mapt' => $this->input->post('mapt'),                'ngay' => $this->input->post('ngay'),                'thang' => $this->input->post('thang'),                'nam' => $this->input->post('nam'),                'date' => $this->input->post('nam')."-".$this->input->post('thang')."-".$this->input->post('ngay'),                'customer_id' => $this->input->post('customer_id'),                'detail' => $this->input->post('detail'),                'total' => $total,                'vat' => $vat,                'text_total' => $this->input->post('text_total'),                'seller'=> $user['user_id']            );            $detail = json_decode($arr['detail']);            $this->load->model('mproduct');            foreach($detail as $val){                $tam = $this->mproduct->getById($val[0]);                $this->mproduct->editById($val[0],array('sell'=>$tam['sell']+$val[2] ));            }            $this->mphieubanhang->add($arr);            //-----------------------------        }else{            $this->load->model('mcustomer');            $this->_data['all_customer'] = $this->mcustomer->getAll();            $this->load->model('mproduct');            $this->_data['product'] = $this->mproduct->getAll();            $this->load->view("/phieubanhang",$this->_data);        }    }        public function ajax()	{        $id  = $_POST['id'];        $this->load->model('mcustomer');        $customer = $this->mcustomer->getById($id);        echo json_encode($customer);    }    public function ajax_product()	{        $id  = $_POST['id'];        $this->load->model('mproduct');        $product = $this->mproduct->getById($id);        echo json_encode($product);    }    //-----------------------------------    public function convert()	{        $tong  = $_POST['tong'];        echo ucfirst($this->convert_text($tong) . ' đồng .');    }    function convert_text($number) {        $hyphen      = ' ';        $conjunction = ' ';        $separator   = ' ';        $negative    = 'negative ';        $decimal     = ' phẩy ';        $dictionary  = array(            0                   => 'không',            1                   => 'một',            2                   => 'hai',            3                   => 'ba',            4                   => 'bốn',            5                   => 'năm',            6                   => 'sáu',            7                   => 'bảy',            8                   => 'tám',            9                   => 'chín',            10                  => 'mười',            11                  => 'mười một',            12                  => 'mười hai',            13                  => 'mười ba',            14                  => 'mười bốn',            15                  => 'mười năm',            16                  => 'mười sáu',            17                  => 'mười bảy',            18                  => 'mười tám',            19                  => 'mười chín',            20                  => 'hai mươi',            30                  => 'ba mươi',            40                  => 'bốn mươi',            50                  => 'năm mươi',            60                  => 'sáu mươi',            70                  => 'bảy mươi',            80                  => 'tám mươi',            90                  => 'chín mươi',            100                 => 'trăm',            1000                => 'ngàn',            1000000             => 'triệu',            1000000000          => 'tỷ',            1000000000000       => 'nghìn tỷ',            1000000000000000    => 'ngàn triệu triệu',            1000000000000000000 => 'tỷ tỷ'        );        if (!is_numeric($number)) {            return false;        }        if (($number >= 0 && (int) $number < 0) || (int) $number < 0 - PHP_INT_MAX) {// overflow            trigger_error(                'convert_number_to_words only accepts numbers between -' . PHP_INT_MAX . ' and ' . PHP_INT_MAX,                E_USER_WARNING            );            return false;        }        if ($number < 0) {            return $negative . $this->convert_text(abs($number));        }        $string = $fraction = null;        if (strpos($number, '.') !== false) {            list($number, $fraction) = explode('.', $number);        }        switch (true) {            case $number < 21:                $string = $dictionary[$number];                break;            case $number < 100:                $tens   = ((int) ($number / 10)) * 10;                $units  = $number % 10;                $string = $dictionary[$tens];                if ($units) {                    $string .= $hyphen . $dictionary[$units];                }                break;            case $number < 1000:                $hundreds  = $number / 100;                $remainder = $number % 100;                $string = $dictionary[$hundreds] . ' ' . $dictionary[100];                if ($remainder) {                    $string .= $conjunction . $this->convert_text($remainder);                }                break;            default:                $baseUnit = pow(1000, floor(log($number, 1000)));                $numBaseUnits = (int) ($number / $baseUnit);                $remainder = $number % $baseUnit;                $string = $this->convert_text($numBaseUnits) . ' ' . $dictionary[$baseUnit];                if ($remainder) {                    $string .= $remainder < 100 ? $conjunction : $separator;                    $string .= $this->convert_text($remainder);                }                break;        }        if (null !== $fraction && is_numeric($fraction)) {            /*            $string .= $decimal;            $words = array();            foreach (str_split((string) $fraction) as $number) {                $words[] = $dictionary[$number];            }            $string .= implode(' ', $words);            */        }        return $string;    }}